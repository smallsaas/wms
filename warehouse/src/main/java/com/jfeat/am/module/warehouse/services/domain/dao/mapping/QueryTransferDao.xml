<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jfeat.am.module.warehouse.services.domain.dao.QueryTransferDao">
    <sql id="Base_Column_List">
        wms_transfer.*
    </sql>
    <resultMap id="BaseResultMap" type="com.jfeat.am.module.warehouse.services.domain.model.TransferRecord">
        <id column="id" property="id" />
        <result column="transaction_code" property="transactionCode" />
        <result column="from_warehouse_id" property="fromWarehouseId" />
        <result column="to_warehouse_id" property="toWarehouseId" />
        <result column="transaction_time" property="transactionTime" />
        <result column="finish_time" property="finishTime" />
        <result column="storage_in_id" property="storageInId" />
        <result column="storage_out_id" property="storageOutId" />
        <result column="note" property="note" />
        <result column="status" property="status" />
        <result column="transaction_by" property="transactionBy" />
        <result column="originator_id" property="originatorId" />
        <result column="originator_name" property="originatorName" />
        <result column="transfer_time" property="transferTime" />
        <result column="field1" property="field1" />
        <result column="field2" property="field2" />

        <result column="fromWarehouseName" property="fromWarehouseName" />
        <result column="toWarehouseName" property="toWarehouseName" />

    </resultMap>
    <select id="findTransferPage" resultMap="BaseResultMap" parameterType="TransferRecord">
        SELECT
            wms_transfer.*,
                fwarehouse.warehouse_name as fromWarehouseName,
                twarehouse.warehouse_name as toWarehouseName
        FROM wms_transfer
            left join wms_warehouse fwarehouse on fwarehouse.id = wms_transfer.from_warehouse_id
            left join wms_warehouse twarehouse on twarehouse.id = wms_transfer.to_warehouse_id
        WHERE 1=1
        <if test="record.id != null and record.id>0 ">
            AND wms_transfer.id LIKE CONCAT('%',#{record.id},'%')
        </if>
        <if test="warehouseId != null and warehouseId >0 ">
            AND (fwarehouse.id = #{warehouseId}
            or twarehouse.id = #{warehouseId})
        </if>
        <if test="record.transactionCode != null and record.transactionCode!= ''">
            AND wms_transfer.transaction_code LIKE CONCAT('%',#{record.transactionCode},'%')
        </if>
        <if test="record.fromWarehouseId != null and record.fromWarehouseId>0 ">
            AND wms_transfer.from_warehouse_id LIKE CONCAT('%',#{record.fromWarehouseId},'%')
        </if>
        <if test="record.toWarehouseId != null and record.toWarehouseId>0 ">
            AND wms_transfer.to_warehouse_id LIKE CONCAT('%',#{record.toWarehouseId},'%')
        </if>
        <if test="startTime != null and endTime != null">
            <![CDATA[
                AND wms_transfer.transaction_time >= date(#{startTime}) AND
                wms_transfer.transaction_time < DATE_ADD(date(#{endTime}),INTERVAL 1 DAY)
            ]]>
        </if>
        <if test="record.storageOutId != null and record.storageOutId>0 ">
            AND wms_transfer.storage_in_id LIKE CONCAT('%',#{record.storageOutId},'%')
        </if>
        <if test="record.storageOutId != null and record.storageOutId>0 ">
            AND wms_transfer.storage_out_id LIKE CONCAT('%',#{record.storageOutId},'%')
        </if>
        <if test="record.note != null and record.note!= ''">
            AND wms_transfer.note LIKE CONCAT('%',#{record.note},'%')
        </if>
        <if test="record.status != null and record.status!= ''">
            AND wms_transfer.status LIKE CONCAT('%',#{record.status},'%')
        </if>
        <if test="record.transactionBy != null and record.transactionBy!= ''">
            AND wms_transfer.transaction_by LIKE CONCAT('%',#{record.transactionBy},'%')
        </if>
        <if test="record.originatorId != null and record.originatorId>0 ">
            AND wms_transfer.originator_id LIKE CONCAT('%',#{record.originatorId},'%')
        </if>
        <if test="record.field1 != null and record.field1!= ''">
            AND wms_transfer.field1 LIKE CONCAT('%',#{record.field1},'%')
        </if>
        <if test="record.field2 != null and record.field2!= ''">
            AND wms_transfer.field2 LIKE CONCAT('%',#{record.field2},'%')
        </if>
        ORDER BY wms_transfer.transaction_time DESC
    </select>


    <resultMap id="OutItemMap" type="com.jfeat.am.module.warehouse.services.domain.model.StorageOutItemRecord">
        <id column="id" property="id" />
        <result column="storage_out_id" property="storageOutId" />
        <result column="sku_id" property="skuId" />
        <result column="transaction_sku_price" property="transactionSkuPrice" />
        <result column="transaction_quantities" property="transactionQuantities" />
        <result column="transaction_time" property="transactionTime" />
        <result column="skuName" property="skuName" />
        <result column="skuBarcode" property="skuBarcode" />
        <result column="skuCode" property="skuCode" />
        <result column="skuUnit" property="skuUnit" />
        <result column="demand_quantities" property="demandQuantities" />
    </resultMap>
    <select id="outItemRecords" resultMap="OutItemMap" parameterType="long">
        SELECT wms_storage_out_item.*,t_sku_product.sku_code as skuCode,
        t_sku_product.sku_name as skuName,
        t_sku_product.bar_code as skuBarcode,
        t_sku_product.field1 as skuUnit
        FROM wms_storage_out_item
        left join t_sku_product on t_sku_product.id = wms_storage_out_item.sku_id
        left join wms_storage_out on (wms_storage_out.id = wms_storage_out_item.storage_out_id
                                        and wms_storage_out_item.type='TRANSFER')
        WHERE 1=1
        and wms_storage_out.id = #{outId}
    </select>

    <!-- 发现 前端不需要 对  OR wms_transfer.`status` = 'Wait_To_Audit' 这个条件 判断  ，删除了-->
    <select id="draftOutItemRecords" resultMap="OutItemMap" parameterType="long">
        SELECT
        wms_storage_out_item.*,
        t_sku_product.sku_code as skuCode,
        t_sku_product.sku_name as skuName,
        t_sku_product.bar_code as skuBarcode,
        t_sku_product.field1 as skuUnit,
        CASE
            WHEN (wms_transfer.`status` = 'Draft')
            THEN
            (
                    SELECT
                    wms_inventory.valid_sku
                    FROM
                    wms_inventory
                    WHERE
                    wms_inventory.sku_id = wms_storage_out_item.sku_id
                    AND wms_inventory.warehouse_id = wms_transfer.from_warehouse_id
            )
            ELSE 0 END AS canRefundCount
        FROM wms_storage_out_item
        LEFT JOIN wms_transfer ON (wms_transfer.id = wms_storage_out_item.storage_out_id AND wms_storage_out_item.type='TRANSFER')
        left join t_sku_product on t_sku_product.id = wms_storage_out_item.sku_id

        WHERE 1=1
        and wms_storage_out_item.storage_out_id = #{outItemId}
        and wms_storage_out_item.type='TRANSFER'

    </select>

    <select id="outItems" resultMap="OutItemMap" parameterType="long">
        SELECT wms_storage_out_item.*
        FROM wms_storage_out_item
        WHERE 1=1
        and wms_storage_out_item.storage_out_id = #{outItemId}
        and wms_storage_out_item.type='TRANSFER'

    </select>
</mapper>