<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jfeat.am.module.warehouse.services.domain.dao.QueryInventoryDao">
    <sql id="Base_Column_List">
        wms_inventory.*
    </sql>

    <resultMap id="BaseResultMap" type="com.jfeat.am.module.warehouse.services.domain.model.InventoryRecord">
        <id column="id" property="id" />
        <result column="warehouse_id" property="warehouseId" />
        <result column="slot_id" property="slotId" />
        <result column="max_inventory" property="maxInventory" />
        <result column="min_inventory" property="minInventory" />
        <result column="sku_id" property="skuId" />
        <result column="valid_sku" property="validSku" />
        <result column="advance_quantities" property="advanceQuantities" />
        <result column="transmit_quantities" property="transmitQuantities" />

        <result column="skuName" property="skuName" />
        <result column="skuBarcode" property="skuBarcode" />
        <result column="skuCode" property="skuCode" />
        <result column="skuUnit" property="skuUnit" />
        <result column="warehouseName" property="warehouseName" />


    </resultMap>


    <select id="findInventoryPage" resultType="InventoryRecord" parameterType="InventoryRecord">
        SELECT

                wms_inventory.*,
                t_sku_product.sku_name as skuName,
                t_sku_product.bar_code as skuBarcode,
                t_sku_product.sku_code as skuCode,
                t_sku_product.field1 as skuUnit,
                wms_warehouse.warehouse_name,
                sum(wms_inventory.transmit_quantities) as transmitCount
        FROM wms_inventory
        left join t_sku_product on t_sku_product.id = wms_inventory.sku_id
        left join wms_warehouse on wms_warehouse.id = wms_inventory.warehouse_id
        WHERE 1=1
        <if test="record.id != null and record.id>0 ">
            AND wms_inventory.id LIKE CONCAT('%',#{record.id},'%')
        </if>

        <if test="record.warehouseId != null and record.warehouseId>0 ">
            AND wms_inventory.warehouse_id LIKE CONCAT('%',#{record.warehouseId},'%')
        </if>

        <if test="record.slotId != null and record.slotId>0 ">
            AND wms_inventory.slot_id LIKE CONCAT('%',#{record.slotId},'%')
        </if>

        <if test="record.maxInventory != null and record.maxInventory>0 ">
            AND wms_inventory.max_inventory LIKE CONCAT('%',#{record.maxInventory},'%')
        </if>

        <if test="record.minInventory != null and record.minInventory>0 ">
            AND wms_inventory.min_inventory LIKE CONCAT('%',#{record.minInventory},'%')
        </if>

        <if test="record.skuId != null and record.skuId>0 ">
            AND wms_inventory.sku_id LIKE CONCAT('%',#{record.skuId},'%')
        </if>

        <if test="record.validSku != null and record.validSku>0 ">
            AND wms_inventory.valid_sku LIKE CONCAT('%',#{record.validSku},'%')
        </if>

        <if test="record.advanceQuantities != null and record.advanceQuantities>0 ">
            AND wms_inventory.advance_quantities LIKE CONCAT('%',#{record.advanceQuantities},'%')
        </if>

        <if test="record.transmitQuantities != null and record.transmitQuantities>0 ">
            AND wms_inventory.transmit_quantities LIKE CONCAT('%',#{record.transmitQuantities},'%')
        </if>
    </select>



    <!--





    -->





    <!-- 单个商品的出入库明细 -->


    <!--
    SELECT
    sout.id,
    sout.transaction_code AS transactionCode,
    sout.transaction_type as transactionType,
    sout.transaction_time as transactionTime,
    sout.batch_no as batchNo,
    sout.warehouse_id as warehouseId,
    sout.slot_id as slotId,
    sout.note as note,
    sout.status as status,
    sout.transaction_by as transactionBy,
    sout.originator_id as originatorId,
    NULL as readjustCostPrice,
    NULL as procurementId,
    sout.field1,
    sout.field2,
    t_sku_product.sku_name as skuName,
    t_sku_product.bar_code as skuBarcode,
    t_sku_product.sku_code as skuCode,
    t_sku_product.field1 as skuUnit,
    wms_warehouse.warehouse_name as warehousName
    FROM wms_storage_out sout
    LEFT JOIN wms_storage_out_item on wms_storage_out_item.storage_out_id = sout.id
    LEFT JOIN t_sku_product on t_sku_product.id = wms_storage_out_item.sku_id
    LEFT JOIN wms_warehouse on wms_warehouse.id = sout.warehouse_id


    UNION
    SELECT
    sin.id,
    sin.transaction_code AS transactionCode,
    sin.transaction_type as transactionType,
    sin.transaction_time as transactionTime,
    sin.batch_no as batchNo,
    sin.warehouse_id as warehouseId,
    sin.slot_id as slotId,
    sin.note as note,
    sin.status as status,
    sin.transaction_by as transactionBy,
    sin.originator_id as originatorId,
    sin.readjust_cost_price as readjustCostPrice,
    sin.procurement_id as procurementId,
    sin.field1,
    sin.field2,
    t_sku_product.sku_name as skuName,
    t_sku_product.bar_code as skuBarcode,
    t_sku_product.sku_code as skuCode,
    t_sku_product.field1 as skuUnit,
    wms_warehouse.warehouse_name as warehousName
    FROM wms_storage_in sin
    LEFT JOIN wms_storage_in_item on (wms_storage_in_item.storage_in_id = sin.id AND wms_storage_in_item.type!='Procurement')
    LEFT JOIN t_sku_product on t_sku_product.id = wms_storage_in_item.sku_id
    LEFT JOIN wms_warehouse on wms_warehouse.id = sin.warehouse_id

    ORDER BY transactionTime DESC
    -->

</mapper>